str(yTrainActivity)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
for(i in activities[,1]) {
yTrainActivity <- gsub(i,activities[activities$V1==i,2],x = yTrain[,1])
}
#names(xTrain) <- features[,2]
#xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
#xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
#finalXTrain <- c(xTrainMean, xTrainStd)
#trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity, finalXTrain)
#head(trainData)
str(yTrainActivity)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
for(i in activities[,1]) {
yTrainActivity <- gsub(i,activities[i,2],x = yTrain[,1])
}
#names(xTrain) <- features[,2]
#xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
#xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
#finalXTrain <- c(xTrainMean, xTrainStd)
#trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity, finalXTrain)
#head(trainData)
str(yTrainActivity)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
for(i in activities[,1]) {
yTrainActivity <- gsub(i,activities[i,2],x = yTrain)
}
#names(xTrain) <- features[,2]
#xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
#xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
#finalXTrain <- c(xTrainMean, xTrainStd)
#trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity, finalXTrain)
#head(trainData)
str(yTrainActivity)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
for(i in 1:6) {
yTrainActivity <- gsub(i,activities[i,2],x = yTrain[,1])
}
#names(xTrain) <- features[,2]
#xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
#xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
#finalXTrain <- c(xTrainMean, xTrainStd)
#trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity, finalXTrain)
#head(trainData)
str(yTrainActivity)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
for(i in 1:6) {
yTrainActivity <- gsub(i,activities[i,2],x = yTrain[,1])
}
#names(xTrain) <- features[,2]
#xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
#xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
#finalXTrain <- c(xTrainMean, xTrainStd)
#trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity, finalXTrain)
#head(trainData)
str(yTrain)
str(yTrainActivity)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
for(i in 1:6) {
yTrainActivity <- gsub(i,activities[i,2],x = as.character(yTrain[,1]))
}
#names(xTrain) <- features[,2]
#xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
#xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
#finalXTrain <- c(xTrainMean, xTrainStd)
#trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity, finalXTrain)
#head(trainData)
str(yTrain)
str(yTrainActivity)
}
cleanup()
yTrain <- read.table(file = "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset\\train\\y_train.txt",header = F,)
activities <- read.table(file = "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset\\activity_labels.txt",header = F,stringsAsFactors = F)
for(i in 1:6) {
yTrainActivity <- gsub(i,activities[i,2],x = as.character(yTrain[,1]))
}
str(yTrainActivity)
str(yTrain)
yTrain[,1] <- as.character(yTrain[.1])
yTrain[,1] <- as.character(yTrain[,1])
str(yTrain)
yTrain <- read.table(file = "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset\\train\\y_train.txt",header = F,)
sm <- gsub(5,"walking", yTrain[,1])
head(sm)
activities[5,2]
for(i in 1:6) {
yTrainActivity <- gsub(i,activities[i,2],x = yTrain[,1])
}
head(yTrainActivity)
for(i in 5) {
yTrainActivity <- gsub(i,activities[i,2],x = (yTrain[,1]))
}
head(yTrainActivity)
for(i in c(1:6)) {
yTrainActivity <- gsub(i,activities[i,2],x = yTrain[,1])
}
head(yTrainActivity)
for(i in activities[,1]) {
yTrainActivity <- gsub(i,activities[i,2],x = yTrain[,1])
}
head(yTrainActivity)
class(activities[,1])
?for
?
str(for)
head(yTrain)
str(yTrain)
str(activites)
activities <- read.table(file = "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset\\activity_labels.txt",header = F,stringsAsFactors = F)
str(activites)
str(activities)
names(activites) <- c("no","name")
names(activities) <- c("no","name")
str(activites)
str(activities)
str(yTrain)
names(yTrain) <- c("no")
merged <- merge(activities, yTrain, by.x="no",by.y="no", all=F)
str(merged)
head(merged)
merged <- merge(yTrain, activities, by.x="no",by.y="no", all=F)
str(merged)
head(merged)
head(yTrain)
merged <- merge(yTrain, activities, by.x="no",by.y="no", all=F,sort = F)
head(merged)
str(merged)
table(yTrain)
table(merged$name)
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
yTrainActivity <- merge(yTrain, activities, by.x="V1",by.y="V1", all=F,sort = F)
#names(xTrain) <- features[,2]
#xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
#xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
#finalXTrain <- c(xTrainMean, xTrainStd)
#trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity, finalXTrain)
#head(trainData)
str(yTrainActivity)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
yTrainActivity <- merge(yTrain, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTrain) <- features[,2]
xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
finalXTrain <- c(xTrainMean, xTrainStd)
trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity[,2], finalXTrain)
head(trainData)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
yTrainActivity <- merge(yTrain, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTrain) <- features[,2]
xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
finalXTrain <- c(xTrainMean, xTrainStd)
trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity[,2], finalXTrain)
subjectTest <- read.table(file = paste(testDir,"subject_test.txt",sep = "\\"),header = F)
xTest <- read.table(file = paste(testDir,"X_test.txt",sep = "\\"),header = F)
yTest <- read.table(file = paste(testDir,"y_test.txt",sep = "\\"),header = F,)
yTestActivity <- merge(yTest, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTest) <- features[,2]
xTestMean <- xTest[,grep(pattern = "mean",names(xTest))]
xTestStd <- xTest[,grep(pattern = "std",names(xTest))]
finalXTest <- c(xTestMean, xTestStd)
testData <- data.frame(subject = subjectTest[,1], activity = yTestActivity[,2], finalXTest)
str(trainData)
str(testData)
}
cleanup()
cleanup <- function() {
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
yTrainActivity <- merge(yTrain, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTrain) <- features[,2]
xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
finalXTrain <- c(xTrainMean, xTrainStd)
trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity[,2], finalXTrain)
subjectTest <- read.table(file = paste(testDir,"subject_test.txt",sep = "\\"),header = F)
xTest <- read.table(file = paste(testDir,"X_test.txt",sep = "\\"),header = F)
yTest <- read.table(file = paste(testDir,"y_test.txt",sep = "\\"),header = F,)
yTestActivity <- merge(yTest, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTest) <- features[,2]
xTestMean <- xTest[,grep(pattern = "mean",names(xTest))]
xTestStd <- xTest[,grep(pattern = "std",names(xTest))]
finalXTest <- c(xTestMean, xTestStd)
testData <- data.frame(subject = subjectTest[,1], activity = yTestActivity[,2], finalXTest)
galaxyData <- rbind(trainData, testData)
str(galaxyData)
}
cleanup()
cleanup <- function() {
#Setting up the directory values
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
#Reading features and activites, common to both test and training data.
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
#Reading training data first, subject_train, xTrain and yTrain
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
#Getting activity name for activity no
yTrainActivity <- merge(yTrain, activities, by.x="V1",by.y="V1", all=F,sort = F)
#naming x train based on deatures
names(xTrain) <- features[,2]
#Finding columns with mean and std
xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
finalXTrain <- c(xTrainMean, xTrainStd)
#Combining subject, activity and different mean and std measurements.
trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity[,2], finalXTrain)
#Similarly for test data
subjectTest <- read.table(file = paste(testDir,"subject_test.txt",sep = "\\"),header = F)
xTest <- read.table(file = paste(testDir,"X_test.txt",sep = "\\"),header = F)
yTest <- read.table(file = paste(testDir,"y_test.txt",sep = "\\"),header = F,)
yTestActivity <- merge(yTest, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTest) <- features[,2]
xTestMean <- xTest[,grep(pattern = "mean",names(xTest))]
xTestStd <- xTest[,grep(pattern = "std",names(xTest))]
finalXTest <- c(xTestMean, xTestStd)
testData <- data.frame(subject = subjectTest[,1], activity = yTestActivity[,2], finalXTest)
#Combining both test and train data
galaxyData <- rbind(trainData, testData)
str(galaxyData)
}
cleanup()
cleanup <- function() {
#Setting up the directory values
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
#Reading features and activites, common to both test and training data.
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
#Reading training data first, subject_train, xTrain and yTrain
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
#Getting activity name for activity no
yTrainActivity <- merge(yTrain, activities, by.x="V1",by.y="V1", all=F,sort = F)
#naming x train based on deatures
names(xTrain) <- features[,2]
#Finding columns with mean and std
xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
finalXTrain <- c(xTrainMean, xTrainStd)
#Combining subject, activity and different mean and std measurements.
trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity[,2], finalXTrain)
#Similarly for test data
subjectTest <- read.table(file = paste(testDir,"subject_test.txt",sep = "\\"),header = F)
xTest <- read.table(file = paste(testDir,"X_test.txt",sep = "\\"),header = F)
yTest <- read.table(file = paste(testDir,"y_test.txt",sep = "\\"),header = F,)
yTestActivity <- merge(yTest, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTest) <- features[,2]
xTestMean <- xTest[,grep(pattern = "mean",names(xTest))]
xTestStd <- xTest[,grep(pattern = "std",names(xTest))]
finalXTest <- c(xTestMean, xTestStd)
testData <- data.frame(subject = subjectTest[,1], activity = yTestActivity[,2], finalXTest)
#Combining both test and train data
galaxyData <- rbind(trainData, testData)
head(galaxyData)
}
cleanup()
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
#Reading features and activites, common to both test and training data.
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
#Reading training data first, subject_train, xTrain and yTrain
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
#Getting activity name for activity no
yTrainActivity <- merge(yTrain, activities, by.x="V1",by.y="V1", all=F,sort = F)
#naming x train based on deatures
names(xTrain) <- features[,2]
#Finding columns with mean and std
xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
finalXTrain <- c(xTrainMean, xTrainStd)
#Combining subject, activity and different mean and std measurements.
trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity[,2], finalXTrain)
#Similarly for test data
subjectTest <- read.table(file = paste(testDir,"subject_test.txt",sep = "\\"),header = F)
xTest <- read.table(file = paste(testDir,"X_test.txt",sep = "\\"),header = F)
yTest <- read.table(file = paste(testDir,"y_test.txt",sep = "\\"),header = F,)
yTestActivity <- merge(yTest, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTest) <- features[,2]
xTestMean <- xTest[,grep(pattern = "mean",names(xTest))]
xTestStd <- xTest[,grep(pattern = "std",names(xTest))]
finalXTest <- c(xTestMean, xTestStd)
testData <- data.frame(subject = subjectTest[,1], activity = yTestActivity[,2], finalXTest)
#Combining both test and train data
galaxyData <- rbind(trainData, testData)
str(galaxyData)
aggregate(x = galaxyData,by = list(subject,activity),FUN = mean, data = galaxyData)
aggregate(x = galaxyData,by = list(galaxyData$subject,galaxyData$activity),FUN = mean, data = galaxyData)
simplified <- aggregate(x = galaxyData,by = list(galaxyData$subject,galaxyData$activity),FUN = mean, data = galaxyData)
str(simplified)
head(simplified)
galaxyData[galaxyData$subject==10 & galaxyData$activity == "LAYING",]
galaxyData[galaxyData$subject==10 & galaxyData$activity == "LAYING",1:3]
check <- galaxyData[galaxyData$subject==10 & galaxyData$activity == "LAYING",1:3]
str(check)
names(check)
mean(check$)
mean(check$tBodyAcc.mean...X)
table(simplified$subject)
table(simplified$subject,simplified$activity)
table(simplified$activity)
names(simplified)
table(simplified$subject,simplified$Group.2)
galaxyData[galaxyData$subject==1,1:3]
simplified[simplified$subject==1,1:3]
simplified[simplified$subject==1,1:5]
check <-galaxyData[galaxyData$subject==1,1:3]
mean(check$tBodyAcc.mean...X)
simplified <- aggregate(x = galaxyData,by = list(galaxyData$subject,galaxyData$activity),FUN = mean, data = galaxyData)
head(simplified)
baseDir <- "H:\\DataScienceWorkspace\\GettingAndCleaningData\\UCI HAR Dataset"
testDir <- paste(baseDir,"test",sep = "\\")
trainDir <- paste(baseDir,"train",sep = "\\")
#Reading features and activites, common to both test and training data.
features <- read.table(file = paste(baseDir,"features.txt",sep = "\\"),header = F,stringsAsFactors = F)
activities <- read.table(file = paste(baseDir,"activity_labels.txt",sep = "\\"),header = F,stringsAsFactors = F)
#Reading training data first, subject_train, xTrain and yTrain
subjectTrain <- read.table(file = paste(trainDir,"subject_train.txt",sep = "\\"),header = F)
xTrain <- read.table(file = paste(trainDir,"X_train.txt",sep = "\\"),header = F)
yTrain <- read.table(file = paste(trainDir,"y_train.txt",sep = "\\"),header = F,)
#Getting activity name for activity no
yTrainActivity <- merge(yTrain, activities, by.x="V1",by.y="V1", all=F,sort = F)
#naming x train based on deatures
names(xTrain) <- features[,2]
#Finding columns with mean and std
xTrainMean <- xTrain[,grep(pattern = "mean",names(xTrain))]
xTrainStd <- xTrain[,grep(pattern = "std",names(xTrain))]
finalXTrain <- c(xTrainMean, xTrainStd)
#Combining subject, activity and different mean and std measurements.
trainData <- data.frame(subject = subjectTrain[,1], activity = yTrainActivity[,2], finalXTrain)
#Similarly for test data
subjectTest <- read.table(file = paste(testDir,"subject_test.txt",sep = "\\"),header = F)
xTest <- read.table(file = paste(testDir,"X_test.txt",sep = "\\"),header = F)
yTest <- read.table(file = paste(testDir,"y_test.txt",sep = "\\"),header = F,)
yTestActivity <- merge(yTest, activities, by.x="V1",by.y="V1", all=F,sort = F)
names(xTest) <- features[,2]
xTestMean <- xTest[,grep(pattern = "mean",names(xTest))]
xTestStd <- xTest[,grep(pattern = "std",names(xTest))]
finalXTest <- c(xTestMean, xTestStd)
testData <- data.frame(subject = subjectTest[,1], activity = yTestActivity[,2], finalXTest)
#Combining both test and train data
galaxyData <- rbind(trainData, testData)
simplified <- aggregate(x = galaxyData[,-c(1:2)],by = list(galaxyData$subject,galaxyData$activity),FUN = mean, data = galaxyData)
simplified
check
head(galaxyData)
head(galaxyData)
head(galaxyData[,c(1:5)])
head(simplified[,c(1:5)])
check <- galaxyData[galaxyData$subject==10 & galaxyData$activity=="LAYING",]
mean(check$tBodyAcc.mean...X)
simplified <- aggregate(x = galaxyData[,-c(1:2)],by = list(galaxyData$subject,galaxyData$activity),FUN = mean, data = galaxyData)
head(simplified[,c(1:6)])
simplified <- aggregate(x = galaxyData[,-c(1:2)],by = list(galaxyData$subject,galaxyData$activity),FUN = mean, data = galaxyData)
names(simplified)[names(simplified)=="Group.1"] <- "subject"
names(simplified)[names(simplified)=="Group.2"] <- "activity"
head(simplified[,c(1:6)])
newTimePlot <- aggregate(steps~interval+weekDay,newActivity,mean)
activity <- read.csv("activity.csv",stringsAsFactors=F)
activity$date <- as.Date(activity$date)
setwd("H:\\DataScienceWorkspace\\RepData_PeerAssessment1")
activity <- read.csv("activity.csv",stringsAsFactors=F)
activity$date <- as.Date(activity$date)
allNAs <- activity[is.na(activity$steps),]
nonNAs <- activity[!is.na(activity$steps),]
allNAs$steps[allNAs$interval==timePlot$interval] <- timePlot$steps
newActivity <- merge(allNAs,nonNAs, all = T)
timePlot <- aggregate(steps~interval,activity,mean)
with(timePlot, plot(x = interval,y = steps,type = "l"))
timePlot[timePlot$steps== max(timePlot$steps),]
allNAs <- activity[is.na(activity$steps),]
nonNAs <- activity[!is.na(activity$steps),]
allNAs$steps[allNAs$interval==timePlot$interval] <- timePlot$steps
newActivity <- merge(allNAs,nonNAs, all = T)
weekDays <- weekdays(newActivity$date,abbreviate = T)
weekDayFactor <- character()
for(i in weekDays) if(i %in% c("Sat","Sun")) weekDayFactor <- c(weekDayFactor,"Weekend") else weekDayFactor <- c(weekDayFactor,"Weekday")
newActivity$weekDay <- as.factor(weekDayFactor)
newTimePlot <- aggregate(steps~interval+weekDay,newActivity,mean)
par(mfcol = (1,2))
par(mfcol = c(1,2))
with(newTimePlot[newTimePlot$weekDay=="weekday"], plot(x = interval,y = steps,type = "l"))
names(newTimePlot)
head(newTimePlot)
with(newTimePlot[newTimePlot$weekDay=="weekday",], plot(x = interval,y = steps,type = "l"))
with(newTimePlot[newTimePlot$weekDay=="Weekday",], plot(x = interval,y = steps,type = "l"))
table(newTimePlot$weekDay)
with(newTimePlot[newTimePlot$weekDay=="Weekend",], plot(x = interval,y = steps,type = "l"))
with(newTimePlot[newTimePlot$weekDay=="Weekday",], plot(x = interval,y = steps,type = "l"))
par(mfrow=c(2,1))
with(newTimePlot[newTimePlot$weekDay=="Weekend",], plot(x = interval,y = steps,type = "l"))
with(newTimePlot[newTimePlot$weekDay=="Weekday",], plot(x = interval,y = steps,type = "l"))
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(x = interval,y = steps,data = newTimePlot[newTimePlot$weekDay=="Weekday",],geom = "line")
par(mfrow=c(2,1))
with(newTimePlot[newTimePlot$weekDay=="Weekend",], plot(x = interval,y = steps,type = "l"),xlab="weekend")
with(newTimePlot[newTimePlot$weekDay=="Weekend",], plot(x = interval,y = steps,type = "l",xlab="weekend"))
par(mfrow=c(2,1))
with(newTimePlot[newTimePlot$weekDay=="Weekend",], plot(x = interval,y = steps,type = "l",xlab="weekend"))
with(newTimePlot[newTimePlot$weekDay=="Weekday",], plot(x = interval,y = steps,type = "l",xlab="weekday"))
par(mfrow=c(2,1))
with(newTimePlot[newTimePlot$weekDay=="Weekend",], plot(x = interval,y = steps,type = "l",main = "weekend"))
with(newTimePlot[newTimePlot$weekDay=="Weekday",], plot(x = interval,y = steps,type = "l",main="weekday"))
par(mfrow=c(2,1))
with(newTimePlot[newTimePlot$weekDay=="Weekend",], plot(x = interval,y = steps,type = "l",main = "weekend",ylab = "Number of steps"))
with(newTimePlot[newTimePlot$weekDay=="Weekday",], plot(x = interval,y = steps,type = "l",main="weekday",ylab = "Number of steps"))
